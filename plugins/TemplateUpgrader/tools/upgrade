#!/usr/bin/perl -w
use strict;
BEGIN { unshift @INC, qw( lib extlib ../lib ../extlib ) }
use MT::Bootstrap::CLI App => 'TemplateUpgrader::Tool::Upgrade';

__END__

=head1 TemplateUpgrader::Tool::Upgrade

TemplateUpgrader/tools/upgrade - A command-line template upgrader

=head1 DESCRIPTION

This plugin provides a framework for upgrading Melody/Movable Type templates
and provides a command-line interface through which to operate.

=head1 SYNOPSIS

 upgrade [options] [--blog KEY] [( --file PATH || --template KEY || --stdin )]

Use the --help flag for more information

=head1 OPTIONS

=over 8


=item B<-b, --blog (ID|NAME)>

The ID or exact name of the blog to be used for template upgrade. This
parameter is required unless --file or --stdin are specified in which case it
is ignored.

=item B<-t, --template (ID|IDENTIFIER|NAME)>

B<OPTIONAL>: Specify this parameter to upgrade a single MT template. The --blog
parameter is required unless you specify a template ID. This parameter cannot
be used with the --file or --stdin options.

=item B<-f, --file FILEPATH>

B<OPTIONAL>: Specify this parameter to use the contents of a file C<FILEPATH>
as the template text to upgrade. The upgraded template will be printed back to
c<STDOUT> (standard output) and a diff will be printed to C<STDERR> (standard
error). This parameter cannot be used with the --template or --stdin options.

=item B<-s, --stdin>

B<OPTIONAL>: Specify this parameter to supply template code via STDIN. The
upgraded template will be printed back to c<STDOUT> (standard output) and a
diff will be printed to C<STDERR> (standard error). This parameter cannot be
used with the --template or --file options.

=item B<-d, --debug>

If specified, performs a dry-run only which modifies nothing.

=item B<-h>

Prints a brief usage message.

=item B<--help>

Displays the command usage and option descriptions.

=item B<--man>

Displays the full manual page including, most notably, examples of usage.

=back

=head1 SETTING YOUR MT_HOME ENVIRONMENT VARIABLE

For all examples shown below, it is assumed that you have properly set your
MT_HOME environment variable. With this set, you are free to run this program
from anywhere, not just your MT directory.

Setting MT_HOME is usually done through one of the following methods:

=over 8

=item B<Export declaration:> 

 prompt> export MT_HOME="/home/www/cgi-bin/mt"
 prompt> /path/to/script [options] args

=item B<Temporary assignment:>

  prompt> MT_HOME="/path/to/MT" /path/to/script [options] args

=back

If you only have a single MT directory, it's best to use an export
declaration in your shell's init script (e.g. .bashrc/.bash_profile,
.cshrc, etc).

=cut

